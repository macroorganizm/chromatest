name: ci

on:
  pull_request:
  push:
    branches:
      - main

env:
  CACHE_NODE_MODULES_PATH: |
    ~/.npm
    node_modules
  BASE_REF: ${{ github.event_name == 'pull_request' && format('remotes/origin/{0}', github.base_ref) || 'HEAD~1' }}
  RUN_UNIQUE_ID: ${{ github.run_id }}-${{ github.run_attempt }}
jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      storybooks-related-lib-changed: ${{ steps.storybooks-related-lib-changed.outputs.storybooks-related-lib-changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '14.18.1'
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.CACHE_NODE_MODULES_PATH }}
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Check changes "storybook-covered"
        id: storybooks-related-lib-changed
        run: echo "::set-output name=storybooks-related-lib-changed::$(node scripts/ci-is-affected.mjs --base=${{ env.BASE_REF}} --head=HEAD --target=storybook-mark)"

#  test:
#    needs: install
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0 # Required to retrieve git history
#
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_NODE_MODULES_PATH }}
#          key: node_modules-${{ hashFiles('**/package-lock.json') }}
#
#      - name: test
#        run: npm test
#
#  build:
#    needs: install
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_NODE_MODULES_PATH }}
#          key: node_modules-${{ hashFiles('**/package-lock.json') }}
#
#      - name: build
#        run: npm run build

#  check-storybook:
#    needs: install
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_NODE_MODULES_PATH }}
#          key: node_modules-${{ hashFiles('**/package-lock.json') }}
#
#      - name: check-storybook
#        run: npm run build-storybook
#      - name: Cache storybook
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ env.RUN_UNIQUE_ID }}_storybook_cache
#          path: dist/storybook/ui
#          retention-days: 1

#  check-chromatic-pr:
#    needs: install
#    if: ${{ needs.install.outputs.storybooks-related-lib-changed == 'true' && github.ref != 'refs/heads/main'}}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0 # Required to retrieve git history
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_NODE_MODULES_PATH }}
#          key: node_modules-${{ hashFiles('**/package-lock.json') }}
#
##      - run: node scripts/patch-storybook-main.mjs --base=${{env.BASE_REF}} --head=HEAD
#
#      - run: npm run build-storybook
#
#      - run: npx chromatic --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }} --exit-zero-on-changes  --storybook-build-dir=dist/storybook/ui

#  comment:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/github-script@v5
#        with:
#          github-token: ${{secrets.GITHUB_TOKEN}}
#          script: |
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: 'ðŸ‘‹ Thanks for reporting!'
#            })

  check-1:
    needs: install
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Try to fail
      run: exit 1

  check-2:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Try to OK
        run: exit 0
#          - name: Print message if we don't fail
#            run: echo Should not get here


#  apply-chromatic:
#    needs: install
#    if: ${{ needs.install.outputs.storybooks-related-lib-changed == 'true' && github.ref == 'refs/heads/main'}}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0 # Required to retrieve git history
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_NODE_MODULES_PATH }}
#          key: node_modules-${{ hashFiles('**/package-lock.json') }}
#
#      #      - run: node scripts/patch-storybook-main.mjs --base=${{env.BASE_REF}} --head=HEAD
#
#      - run: npm run build-storybook
#
#      - run: npx chromatic --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }} --auto-accept-changes  --storybook-build-dir=dist/storybook/ui

#      - uses: chromaui/action@v1
#        with:
#          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
#          exitZeroOnChanges: true # Option to prevent the workflow from failing and request changes reviews
#          storybookBuildDir: dist/storybook/ui

#  accept-chromatic-baseline:
#    needs: install
#    if: ${{ needs.install.outputs.storybooks-related-lib-changed == 'true' && github.ref == 'refs/heads/main'}}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0 # Required to retrieve git history
#
#      - uses: actions/cache@v3
#        with:
#          path: ${{ env.CACHE_NODE_MODULES_PATH }}
#          key: node_modules-${{ hashFiles('**/package-lock.json') }}
#
#      - run: npm run build-storybook
#
#      - uses: chromaui/action@v1
#        if: github.ref == 'refs/heads/main'
#        with:
#          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
#          autoAcceptChanges: true # Automatically accepting changes which are merged to the master branch
#          storybookBuildDir: dist/storybook/ui
